{"ast":null,"code":"var _jsxFileName = \"E:\\\\Portfolio\\\\pages\\\\test.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Navbar from '../components/layout/Navbar';\nimport Link from \"next/link\";\nimport HeadInner from '../components/layout/Head';\nimport { useSpring, animated } from 'react-spring';\n\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.05];\n\nconst trans = (x, y, s) => `perspective(1800px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n\nfunction Test() {\n  const [props, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: {\n      mass: 5,\n      tension: 350,\n      friction: 40\n    }\n  }));\n  return __jsx(\"div\", {\n    className: \"homepage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, __jsx(HeadInner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }), __jsx(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"home-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"home-inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"home-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 33\n    }\n  }, __jsx(\"p\", {\n    className: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 37\n    }\n  }, \"Hi,\"), __jsx(\"p\", {\n    className: \"large-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 37\n    }\n  }, \"I'm Robert,\"), __jsx(\"p\", {\n    className: \"large-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 37\n    }\n  }, \"web developer.\"), __jsx(\"p\", {\n    className: \"paragraph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 37\n    }\n  }, \"I'm an enthusiastic software developer, that covers the full-stack development of a website and aims to build responsive and engaging products.\"), __jsx(\"div\", {\n    className: \"button-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 37\n    }\n  }, __jsx(Link, {\n    href: \"/work\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 41\n    }\n  }, __jsx(\"button\", {\n    className: \"work-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 60\n    }\n  }, \"My Work\")))), __jsx(animated.div, {\n    class: \"large-logo-test\",\n    from: true,\n    onMouseMove: ({\n      clientX: x,\n      clientY: y\n    }) => set({\n      xys: calc(x, y)\n    }),\n    onMouseLeave: () => set({\n      xys: [0, 0, 1]\n    }),\n    style: {\n      transform: props.xys.interpolate(trans)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 33\n    }\n  }, __jsx(\"img\", {\n    src: \"/RLogo.png\",\n    alt: \".robert\",\n    className: \"big-logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 45\n    }\n  })))));\n}\n\nexport default Test;","map":{"version":3,"sources":["E:/Portfolio/pages/test.js"],"names":["Navbar","Link","HeadInner","useSpring","animated","calc","x","y","window","innerHeight","innerWidth","trans","s","Test","props","set","xys","config","mass","tension","friction","clientX","clientY","transform","interpolate"],"mappings":"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","sourcesContent":["import Navbar from '../components/layout/Navbar';\r\nimport Link from \"next/link\";\r\nimport HeadInner from '../components/layout/Head';\r\nimport {useSpring, animated} from 'react-spring'\r\n\r\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.05]\r\n\r\nconst trans = (x, y, s) => `perspective(1800px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\r\n\r\nfunction Test (){\r\n    const [props, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 } }))\r\n        return (\r\n            <div className=\"homepage\">\r\n                <HeadInner/>\r\n                <Navbar/>\r\n                    <div className=\"home-image\">\r\n                            <div className=\"home-inner\">\r\n                                <div className=\"home-text\">\r\n                                    <p className=\"large\">Hi,</p>\r\n                                    <p className=\"large-name\">I'm Robert,</p>\r\n                                    <p className=\"large-name\">web developer.</p>\r\n                                    <p className=\"paragraph\">I'm an enthusiastic software developer, that covers the full-stack development of a website and aims to build responsive and engaging products.</p>\r\n                                    <div className=\"button-div\">\r\n                                        <Link href=\"/work\"><button className=\"work-button\">My Work</button></Link>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                <animated.div\r\n                                        class=\"large-logo-test\"\r\n                                        from\r\n                                        onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\r\n                                        onMouseLeave={() => set({ xys: [0, 0, 1] })}\r\n                                        style={{ transform: props.xys.interpolate(trans) }} >\r\n                                            <img src=\"/RLogo.png\" alt=\".robert\"  className=\"big-logo\"/>\r\n                                        </animated.div>\r\n\r\n                            </div>    \r\n                        </div>\r\n                    </div>\r\n        \r\n        )\r\n\r\n}\r\n\r\n\r\n\r\nexport default Test;"]},"metadata":{},"sourceType":"module"}